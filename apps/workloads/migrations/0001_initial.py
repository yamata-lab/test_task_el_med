# Generated by Django 4.2.7 on 2025-09-02 10:22

from django.db import migrations, models
import django.db.models.deletion
import encrypted_model_fields.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Credentials",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The timestamp when the object was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The timestamp when the object was last updated.",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="The username for the credentials.", max_length=255
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        help_text="Encrypted password for the credentials.",
                        max_length=255,
                    ),
                ),
                (
                    "domain",
                    models.CharField(
                        blank=True,
                        help_text="The network domain, if applicable (e.g., Active Directory).",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "verbose_name": "Credential Set",
                "verbose_name_plural": "Credential Sets",
            },
            bases=(encrypted_model_fields.fields.EncryptedMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Workload",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The timestamp when the object was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The timestamp when the object was last updated.",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="A human-readable name for the workload (e.g., 'Primary DB Server').",
                        max_length=255,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        db_index=True,
                        help_text="The unique IP address of the workload. Cannot be changed after creation.",
                        unique=True,
                    ),
                ),
                (
                    "credentials",
                    models.ForeignKey(
                        help_text="Credentials required to access this workload.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="workloads",
                        to="workloads.credentials",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workload",
                "verbose_name_plural": "Workloads",
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MountPoint",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="The timestamp when the object was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="The timestamp when the object was last updated.",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The name or path of the mount point (e.g., 'C:\\' or '/var/log').",
                        max_length=255,
                    ),
                ),
                (
                    "size_gb",
                    models.PositiveIntegerField(
                        help_text="The total size of the volume in gigabytes (GB)."
                    ),
                ),
                (
                    "workload",
                    models.ForeignKey(
                        help_text="The workload this mount point is attached to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mount_points",
                        to="workloads.workload",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mount Point",
                "verbose_name_plural": "Mount Points",
                "ordering": ["-created_at"],
                "abstract": False,
                "unique_together": {("workload", "name")},
            },
        ),
    ]
